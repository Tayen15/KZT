<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Owner Dashboard - ByteBot</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        'dark-primary': '#1a1d23',
                        'dark-secondary': '#23272f',
                        'dark-card': '#2b2f38',
                        'dark-hover': '#32363f',
                        'discord': '#5865F2',
                        'discord-hover': '#4752c4',
                        'text-primary': '#ffffff',
                        'text-secondary': '#b9bbbe',
                        'border-dark': '#3a3f4b',
                        'success': '#43b581',
                        'warning': '#faa61a',
                        'danger': '#f04747'
                    }
                }
            }
        }
    </script>
</head>
<body class="bg-dark-primary text-text-primary min-h-screen">
    <%- include('../partials/navbar') %>

    <main class="container mx-auto px-4 py-8">
        <!-- Header -->
        <div class="mb-8">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-4xl font-bold mb-2">üîß Owner Dashboard</h1>
                    <p class="text-text-secondary">ByteBot Advanced Control Panel</p>
                </div>
                <div class="bg-gradient-to-r from-discord to-purple-600 px-4 py-2 rounded-lg">
                    <span class="text-sm font-semibold">üõ°Ô∏è OWNER ACCESS</span>
                </div>
            </div>
        </div>

        <!-- Quick Stats Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
            <!-- Bot Status -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <div class="flex items-center justify-between mb-4">
                    <div class="bg-success/20 p-3 rounded-lg">
                        <svg class="w-6 h-6 text-success" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                    </div>
                    <span class="text-2xl font-bold text-success"><%= botStats.status %></span>
                </div>
                <h3 class="text-text-secondary text-sm mb-1">Bot Status</h3>
                <p class="text-xl font-bold">ONLINE</p>
                <p class="text-text-secondary text-xs mt-2">Uptime: <%= botStats.uptime %></p>
            </div>

            <!-- Total Servers -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <div class="flex items-center justify-between mb-4">
                    <div class="bg-discord/20 p-3 rounded-lg">
                        <svg class="w-6 h-6 text-discord" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                        </svg>
                    </div>
                    <span class="text-2xl font-bold text-discord"><%= botStats.guilds %></span>
                </div>
                <h3 class="text-text-secondary text-sm mb-1">Total Servers</h3>
                <p class="text-xl font-bold"><%= botStats.guilds %> Guilds</p>
            </div>

            <!-- Total Users -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <div class="flex items-center justify-between mb-4">
                    <div class="bg-purple-500/20 p-3 rounded-lg">
                        <svg class="w-6 h-6 text-purple-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"/>
                        </svg>
                    </div>
                    <span class="text-2xl font-bold text-purple-500"><%= botStats.users %></span>
                </div>
                <h3 class="text-text-secondary text-sm mb-1">Total Users</h3>
                <p class="text-xl font-bold"><%= botStats.users %> Members</p>
            </div>

            <!-- Commands Used -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <div class="flex items-center justify-between mb-4">
                    <div class="bg-warning/20 p-3 rounded-lg">
                        <svg class="w-6 h-6 text-warning" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"/>
                        </svg>
                    </div>
                    <span class="text-2xl font-bold text-warning"><%= botStats.commands || 0 %></span>
                </div>
                <h3 class="text-text-secondary text-sm mb-1">Commands Loaded</h3>
                <p class="text-xl font-bold"><%= botStats.commands || 0 %> Commands</p>
            </div>
        </div>

        <!-- Main Dashboard Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
            <!-- Server List -->
            <div class="lg:col-span-2">
                <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h2 class="text-2xl font-bold">All Servers</h2>
                        <input type="text" id="searchServer" placeholder="Search servers..." 
                               class="bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 text-sm focus:outline-none focus:border-discord">
                    </div>
                    <div class="space-y-3 max-h-96 overflow-y-auto" id="serverList">
                        <% allGuilds.forEach(guild => { %>
                            <div class="bg-dark-secondary border border-border-dark rounded-lg p-4 hover:border-discord transition-all duration-200 server-item">
                                <div class="flex items-center justify-between">
                                    <div class="flex items-center space-x-4 flex-1">
                                        <% if (guild.icon) { %>
                                            <img src="https://cdn.discordapp.com/icons/<%= guild.id %>/<%= guild.icon %>.png" 
                                                 alt="<%= guild.name %>" 
                                                 class="w-12 h-12 rounded-lg">
                                        <% } else { %>
                                            <div class="w-12 h-12 bg-discord rounded-lg flex items-center justify-center text-xl font-bold">
                                                <%= guild.name.charAt(0).toUpperCase() %>
                                            </div>
                                        <% } %>
                                        <div class="flex-1">
                                            <h3 class="font-bold"><%= guild.name %></h3>
                                            <div class="flex items-center space-x-4 text-xs text-text-secondary mt-1">
                                                <span>üë• <%= guild.memberCount %> members</span>
                                                <span>üìä <%= guild.channels?.size || 0 %> channels</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="flex items-center space-x-2">
                                        <a href="/dashboard/guild/<%= guild.id %>" 
                                           class="bg-discord hover:bg-discord-hover text-white px-4 py-2 rounded-lg text-sm transition-colors duration-200">
                                            Manage
                                        </a>
                                        <button onclick="leaveGuild('<%= guild.id %>')" 
                                                class="bg-danger/20 hover:bg-danger text-danger hover:text-white px-4 py-2 rounded-lg text-sm transition-colors duration-200">
                                            Leave
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <!-- Quick Actions & System Info -->
            <div class="space-y-6">
                <!-- Quick Actions -->
                <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                    <h2 class="text-xl font-bold mb-4">Quick Actions</h2>
                    <div class="space-y-3">
                        <button onclick="refreshBot()" 
                                class="w-full bg-discord hover:bg-discord-hover text-white font-semibold px-4 py-3 rounded-lg transition-colors duration-200 flex items-center justify-center space-x-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                            </svg>
                            <span>Reload Commands</span>
                        </button>
                        <button onclick="showAnnouncementModal()" 
                                class="w-full bg-warning hover:bg-warning/80 text-white font-semibold px-4 py-3 rounded-lg transition-colors duration-200 flex items-center justify-center space-x-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z"/>
                            </svg>
                            <span>Send Announcement</span>
                        </button>
                        <button onclick="viewLogs()" 
                                class="w-full bg-success hover:bg-success/80 text-white font-semibold px-4 py-3 rounded-lg transition-colors duration-200 flex items-center justify-center space-x-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                            </svg>
                            <span>View Logs</span>
                        </button>
                        <button onclick="showStats()" 
                                class="w-full bg-purple-500 hover:bg-purple-600 text-white font-semibold px-4 py-3 rounded-lg transition-colors duration-200 flex items-center justify-center space-x-2">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                            </svg>
                            <span>Detailed Stats</span>
                        </button>
                    </div>
                </div>

                <!-- System Info -->
                <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                    <h2 class="text-xl font-bold mb-4">System Info</h2>
                    <div class="space-y-3 text-sm">
                        <div class="flex justify-between items-center">
                            <span class="text-text-secondary">Bot Name:</span>
                            <span class="font-semibold">ByteBot</span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-text-secondary">Version:</span>
                            <span class="font-semibold">v2.0.0</span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-text-secondary">Node.js:</span>
                            <span class="font-semibold"><%= systemInfo.nodeVersion %></span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-text-secondary">Discord.js:</span>
                            <span class="font-semibold"><%= systemInfo.discordVersion %></span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-text-secondary">Memory:</span>
                            <span class="font-semibold"><%= systemInfo.memory %></span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-text-secondary">Platform:</span>
                            <span class="font-semibold"><%= systemInfo.platform %></span>
                        </div>
                        <div class="flex justify-between items-center">
                            <span class="text-text-secondary">Ping:</span>
                            <span class="font-semibold text-success"><%= botStats.ping %>ms</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Advanced Features Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
            <!-- Database Status -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-lg font-bold">Database</h3>
                    <span class="text-xs bg-success/20 text-success px-2 py-1 rounded">Connected</span>
                </div>
                <div class="space-y-2 text-sm">
                    <div class="flex justify-between">
                        <span class="text-text-secondary">Type:</span>
                        <span class="font-semibold">MySQL</span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-text-secondary">Guilds:</span>
                        <span class="font-semibold"><%= dbStats.guilds %></span>
                    </div>
                    <div class="flex justify-between">
                        <span class="text-text-secondary">Users:</span>
                        <span class="font-semibold"><%= dbStats.users %></span>
                    </div>
                </div>
            </div>

            <!-- Active Features -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <h3 class="text-lg font-bold mb-4">Active Features</h3>
                <div class="space-y-2">
                    <div class="flex items-center justify-between text-sm">
                        <span class="text-text-secondary">üéµ Music System</span>
                        <span class="text-success">‚úì Active</span>
                    </div>
                    <div class="flex items-center justify-between text-sm">
                        <span class="text-text-secondary">üïå Prayer Times</span>
                        <span class="text-success">‚úì Active</span>
                    </div>
                    <div class="flex items-center justify-between text-sm">
                        <span class="text-text-secondary">üìä Monitoring</span>
                        <span class="text-success">‚úì Active</span>
                    </div>
                    <div class="flex items-center justify-between text-sm">
                        <span class="text-text-secondary">üéÆ Minecraft Status</span>
                        <span class="text-success">‚úì Active</span>
                    </div>
                    <div class="flex items-center justify-between text-sm">
                        <span class="text-text-secondary">üõ°Ô∏è Moderation</span>
                        <span class="text-success">‚úì Active</span>
                    </div>
                </div>
            </div>

            <!-- Recent Activity -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <h3 class="text-lg font-bold mb-4">Recent Activity</h3>
                <div class="space-y-3 text-sm">
                    <div class="flex items-start space-x-2">
                        <div class="w-2 h-2 bg-success rounded-full mt-1.5"></div>
                        <div class="flex-1">
                            <p class="text-text-secondary">Bot restarted</p>
                            <p class="text-xs text-text-secondary/60">Just now</p>
                        </div>
                    </div>
                    <div class="flex items-start space-x-2">
                        <div class="w-2 h-2 bg-discord rounded-full mt-1.5"></div>
                        <div class="flex-1">
                            <p class="text-text-secondary">New guild joined</p>
                            <p class="text-xs text-text-secondary/60">2 hours ago</p>
                        </div>
                    </div>
                    <div class="flex items-start space-x-2">
                        <div class="w-2 h-2 bg-warning rounded-full mt-1.5"></div>
                        <div class="flex-1">
                            <p class="text-text-secondary">Commands reloaded</p>
                            <p class="text-xs text-text-secondary/60">5 hours ago</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Command Categories -->
        <div class="bg-dark-card border border-border-dark rounded-lg p-6 mb-8">
            <h2 class="text-2xl font-bold mb-6">Command Categories</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                <% commandCategories.forEach(category => { %>
                    <div class="bg-dark-secondary border border-border-dark rounded-lg p-4">
                        <div class="flex items-center space-x-3 mb-3">
                            <div class="text-2xl"><%= category.emoji %></div>
                            <div>
                                <h3 class="font-bold"><%= category.name %></h3>
                                <p class="text-text-secondary text-xs"><%= category.count %> commands</p>
                            </div>
                        </div>
                        <div class="flex flex-wrap gap-2">
                            <% category.commands.forEach(cmd => { %>
                                <span class="text-xs bg-dark-card border border-border-dark px-2 py-1 rounded">
                                    <%= cmd %>
                                </span>
                            <% }); %>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>

        <!-- Bot Settings & Command Management -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
            <!-- Bot Settings -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <h2 class="text-2xl font-bold mb-6">ü§ñ Bot Settings</h2>
                <form id="botSettingsForm" class="space-y-4">
                    <div>
                        <label class="block text-sm font-semibold mb-2">Activity Type</label>
                        <select id="activityType" class="w-full bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 focus:outline-none focus:border-discord">
                            <option value="Playing">Playing</option>
                            <option value="Watching" selected>Watching</option>
                            <option value="Listening">Listening</option>
                            <option value="Competing">Competing</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-semibold mb-2">Activity Text</label>
                        <input type="text" id="activityText" placeholder="e.g., over servers" 
                               class="w-full bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 focus:outline-none focus:border-discord">
                    </div>
                    <div>
                        <label class="block text-sm font-semibold mb-2">Status</label>
                        <select id="status" class="w-full bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 focus:outline-none focus:border-discord">
                            <option value="online">üü¢ Online</option>
                            <option value="idle">üü° Idle</option>
                            <option value="dnd">üî¥ Do Not Disturb</option>
                            <option value="invisible">‚ö´ Invisible</option>
                        </select>
                    </div>
                    <div class="flex items-center space-x-2">
                        <input type="checkbox" id="maintenanceMode" class="w-4 h-4">
                        <label for="maintenanceMode" class="text-sm">Maintenance Mode</label>
                    </div>
                    <div id="maintenanceMessageDiv" class="hidden">
                        <label class="block text-sm font-semibold mb-2">Maintenance Message</label>
                        <textarea id="maintenanceMessage" rows="2" 
                                  class="w-full bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 focus:outline-none focus:border-discord"
                                  placeholder="Bot is under maintenance..."></textarea>
                    </div>
                    <button type="submit" 
                            class="w-full bg-discord hover:bg-discord-hover text-white font-semibold px-4 py-3 rounded-lg transition-colors duration-200">
                        Save Bot Settings
                    </button>
                </form>
            </div>

            <!-- Command Management -->
            <div class="bg-dark-card border border-border-dark rounded-lg p-6">
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-2xl font-bold">‚öôÔ∏è Command Management</h2>
                    <button onclick="refreshCommands()" class="text-sm text-discord hover:text-discord-hover">
                        üîÑ Refresh
                    </button>
                </div>
                <div class="mb-4">
                    <input type="text" id="searchCommands" placeholder="Search commands..." 
                           class="w-full bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 text-sm focus:outline-none focus:border-discord">
                </div>
                <div id="commandsList" class="space-y-2 max-h-96 overflow-y-auto">
                    <!-- Commands will be loaded here -->
                    <div class="text-center text-text-secondary py-4">Loading commands...</div>
                </div>
            </div>
        </div>

        <!-- Active Lofi Sessions -->
        <div class="bg-dark-card border border-border-dark rounded-lg p-6 mb-8">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold">üéµ Active Lofi Sessions</h2>
                <button onclick="refreshLofi()" class="text-sm text-discord hover:text-discord-hover">
                    üîÑ Refresh
                </button>
            </div>
            <div id="lofiSessions" class="space-y-3">
                <!-- Lofi sessions will be loaded here -->
                <div class="text-center text-text-secondary py-4">Loading sessions...</div>
            </div>
        </div>
    </main>

    <!-- Announcement Modal -->
    <div id="announcementModal" class="fixed inset-0 bg-black/50 backdrop-blur-sm hidden items-center justify-center z-50">
        <div class="bg-dark-card border border-border-dark rounded-lg p-6 max-w-2xl w-full mx-4">
            <h2 class="text-2xl font-bold mb-4">Send Announcement</h2>
            <form id="announcementForm" class="space-y-4">
                <div>
                    <label class="block text-sm font-semibold mb-2">Target Servers</label>
                    <select id="targetServers" class="w-full bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 focus:outline-none focus:border-discord">
                        <option value="all">All Servers</option>
                        <% allGuilds.forEach(guild => { %>
                            <option value="<%= guild.id %>"><%= guild.name %></option>
                        <% }); %>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-semibold mb-2">Message</label>
                    <textarea id="announcementMessage" rows="6" 
                              class="w-full bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 focus:outline-none focus:border-discord"
                              placeholder="Enter your announcement message..."></textarea>
                </div>
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="closeAnnouncementModal()" 
                            class="bg-dark-secondary hover:bg-dark-hover border border-border-dark px-6 py-2 rounded-lg transition-colors duration-200">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="bg-discord hover:bg-discord-hover text-white px-6 py-2 rounded-lg transition-colors duration-200">
                        Send Announcement
                    </button>
                </div>
            </form>
        </div>
    </div>

    <%- include('../partials/footer') %>

    <script>
        // Load initial data
        document.addEventListener('DOMContentLoaded', function() {
            loadBotSettings();
            loadCommands();
            loadLofiSessions();
        });

        // Search servers
        document.getElementById('searchServer').addEventListener('input', function(e) {
            const search = e.target.value.toLowerCase();
            document.querySelectorAll('.server-item').forEach(item => {
                const name = item.querySelector('h3').textContent.toLowerCase();
                item.style.display = name.includes(search) ? 'block' : 'none';
            });
        });

        // Search commands
        document.getElementById('searchCommands').addEventListener('input', function(e) {
            const search = e.target.value.toLowerCase();
            document.querySelectorAll('.command-item').forEach(item => {
                const name = item.getAttribute('data-name').toLowerCase();
                item.style.display = name.includes(search) ? 'flex' : 'none';
            });
        });

        // Maintenance mode toggle
        document.getElementById('maintenanceMode').addEventListener('change', function(e) {
            const msgDiv = document.getElementById('maintenanceMessageDiv');
            msgDiv.classList.toggle('hidden', !e.target.checked);
        });

        // Load bot settings
        async function loadBotSettings() {
            try {
                const response = await fetch('/api/owner/settings');
                const data = await response.json();
                
                if (data.success) {
                    const settings = data.settings;
                    document.getElementById('activityType').value = settings.activityType;
                    document.getElementById('activityText').value = settings.activityText;
                    document.getElementById('status').value = settings.status;
                    document.getElementById('maintenanceMode').checked = settings.maintenanceMode;
                    if (settings.maintenanceMode) {
                        document.getElementById('maintenanceMessageDiv').classList.remove('hidden');
                        document.getElementById('maintenanceMessage').value = settings.maintenanceMessage || '';
                    }
                }
            } catch (error) {
                console.error('Error loading bot settings:', error);
            }
        }

        // Save bot settings
        document.getElementById('botSettingsForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const settings = {
                activityType: document.getElementById('activityType').value,
                activityText: document.getElementById('activityText').value,
                status: document.getElementById('status').value,
                maintenanceMode: document.getElementById('maintenanceMode').checked,
                maintenanceMessage: document.getElementById('maintenanceMessage').value
            };
            
            try {
                const response = await fetch('/api/owner/settings', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(settings)
                });
                
                const data = await response.json();
                if (data.success) {
                    alert('‚úÖ Bot settings updated successfully!');
                } else {
                    alert('‚ùå Failed to update settings: ' + data.error);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('‚ùå Error updating settings');
            }
        });

        // Load commands
        async function loadCommands() {
            try {
                const response = await fetch('/api/owner/commands');
                const data = await response.json();
                
                if (data.success) {
                    const commandsList = document.getElementById('commandsList');
                    commandsList.innerHTML = '';
                    
                    // Group by category
                    const grouped = {};
                    data.commands.forEach(cmd => {
                        if (!grouped[cmd.category]) grouped[cmd.category] = [];
                        grouped[cmd.category].push(cmd);
                    });
                    
                    // Render by category
                    Object.keys(grouped).sort().forEach(category => {
                        const categoryDiv = document.createElement('div');
                        categoryDiv.className = 'mb-4';
                        categoryDiv.innerHTML = `
                            <h3 class="text-sm font-bold text-text-secondary uppercase mb-2">${category}</h3>
                        `;
                        
                        grouped[category].forEach(cmd => {
                            const cmdDiv = document.createElement('div');
                            cmdDiv.className = 'command-item flex items-center justify-between bg-dark-secondary border border-border-dark rounded-lg px-4 py-2 mb-2';
                            cmdDiv.setAttribute('data-name', cmd.name);
                            
                            const statusColor = cmd.enabled ? 'success' : 'danger';
                            const statusText = cmd.enabled ? 'Enabled' : 'Disabled';
                            
                            cmdDiv.innerHTML = `
                                <div class="flex-1">
                                    <p class="font-semibold">/${cmd.name}</p>
                                    <p class="text-xs text-text-secondary">${cmd.description}</p>
                                    ${!cmd.enabled && cmd.reason ? `<p class="text-xs text-danger mt-1">Reason: ${cmd.reason}</p>` : ''}
                                </div>
                                <button onclick="toggleCommandStatus('${cmd.name}', ${!cmd.enabled})" 
                                        class="text-sm px-3 py-1 rounded ${cmd.enabled ? 'bg-danger/20 text-danger hover:bg-danger/30' : 'bg-success/20 text-success hover:bg-success/30'} transition-colors">
                                    ${cmd.enabled ? 'Disable' : 'Enable'}
                                </button>
                            `;
                            
                            categoryDiv.appendChild(cmdDiv);
                        });
                        
                        commandsList.appendChild(categoryDiv);
                    });
                }
            } catch (error) {
                console.error('Error loading commands:', error);
                document.getElementById('commandsList').innerHTML = '<div class="text-center text-danger py-4">Error loading commands</div>';
            }
        }

        // Toggle command
        async function toggleCommandStatus(commandName, enable) {
            let reason = null;
            if (!enable) {
                reason = prompt('Enter reason for disabling this command (optional):');
                if (reason === null) return; // User cancelled
            }
            
            try {
                const response = await fetch(`/api/owner/commands/${commandName}/toggle`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ enabled: enable, reason })
                });
                
                const data = await response.json();
                if (data.success) {
                    loadCommands(); // Reload list
                } else {
                    alert('‚ùå Failed to toggle command: ' + data.error);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('‚ùå Error toggling command');
            }
        }

        // Refresh commands
        function refreshCommands() {
            loadCommands();
        }

        // Load lofi sessions
        async function loadLofiSessions() {
            try {
                const response = await fetch('/api/owner/lofi');
                const data = await response.json();
                
                if (data.success) {
                    const lofiDiv = document.getElementById('lofiSessions');
                    
                    if (data.sessions.length === 0) {
                        lofiDiv.innerHTML = '<div class="text-center text-text-secondary py-4">No active lofi sessions</div>';
                    } else {
                        lofiDiv.innerHTML = '';
                        data.sessions.forEach(session => {
                            const sessionDiv = document.createElement('div');
                            sessionDiv.className = 'bg-dark-secondary border border-border-dark rounded-lg p-4';
                            sessionDiv.innerHTML = `
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="font-bold">${session.guild.name}</p>
                                        <p class="text-sm text-text-secondary">Channel ID: ${session.channelId}</p>
                                        <p class="text-xs text-text-secondary">Started: ${new Date(session.startedAt).toLocaleString()}</p>
                                    </div>
                                    <span class="text-xs bg-success/20 text-success px-3 py-1 rounded">üéµ Playing</span>
                                </div>
                            `;
                            lofiDiv.appendChild(sessionDiv);
                        });
                    }
                }
            } catch (error) {
                console.error('Error loading lofi sessions:', error);
                document.getElementById('lofiSessions').innerHTML = '<div class="text-center text-danger py-4">Error loading sessions</div>';
            }
        }

        // Refresh lofi
        function refreshLofi() {
            loadLofiSessions();
        }

        // Announcement modal
        document.getElementById('searchServer').addEventListener('input', function(e) {
            const search = e.target.value.toLowerCase();
            document.querySelectorAll('.server-item').forEach(item => {
                const name = item.querySelector('h3').textContent.toLowerCase();
                item.style.display = name.includes(search) ? 'block' : 'none';
            });
        });

        // Announcement modal
        function showAnnouncementModal() {
            document.getElementById('announcementModal').classList.remove('hidden');
            document.getElementById('announcementModal').classList.add('flex');
        }

        function closeAnnouncementModal() {
            document.getElementById('announcementModal').classList.add('hidden');
            document.getElementById('announcementModal').classList.remove('flex');
        }

        document.getElementById('announcementForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const target = document.getElementById('targetServers').value;
            const message = document.getElementById('announcementMessage').value;
            
            try {
                const response = await fetch('/api/owner/announce', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ target, message })
                });
                
                if (response.ok) {
                    alert('Announcement sent successfully!');
                    closeAnnouncementModal();
                    document.getElementById('announcementMessage').value = '';
                } else {
                    alert('Failed to send announcement');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error sending announcement');
            }
        });

        // Quick actions
        async function refreshBot() {
            if (!confirm('Reload all bot commands? This may take a moment.')) return;
            
            try {
                const response = await fetch('/api/owner/reload', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                if (response.ok) {
                    alert('Commands reloaded successfully!');
                    location.reload();
                } else {
                    alert('Failed to reload commands');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error reloading commands');
            }
        }

        async function leaveGuild(guildId) {
            if (!confirm('Are you sure you want to leave this server?')) return;
            
            try {
                const response = await fetch(`/api/owner/leave/${guildId}`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                if (response.ok) {
                    alert('Left server successfully!');
                    location.reload();
                } else {
                    alert('Failed to leave server');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error leaving server');
            }
        }

        function viewLogs() {
            window.open('/dashboard/owner/logs', '_blank');
        }

        function showStats() {
            window.open('/dashboard/owner/stats', '_blank');
        }
    </script>
</body>
</html>
